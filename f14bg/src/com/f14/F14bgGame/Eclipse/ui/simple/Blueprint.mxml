<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="190" height="200" horizontalScrollPolicy="off" verticalScrollPolicy="off">
	<mx:Script>
		<![CDATA[
			import com.f14.F14bgGame.Eclipse.consts.UnitType;
			import com.f14.core.util.ApplicationUtil;
			import com.f14.F14bgGame.Eclipse.EclipseUtil;
			import com.f14.F14bgGame.Eclipse.components.EclipseShipPart;
			
			protected var shipParts:Array = new Array();
			protected var object:Object;
			protected var _selectable:Boolean;
		
			public function get selectable():Boolean{
				return this._selectable;
			}
			
			public function set selectable(selectable:Boolean):void{
				this._selectable = selectable;
				for each(var s:EclipseShipPart in this.shipParts){
					if(s!=null){
						s.selectable = selectable;
					}
				}
			}
			
			public function clear():void{
				this.removeAllChildren();
				this.shipParts = new Array();
			}
			
			/**
			 * 装载飞船配件信息
			 */
			public function loadShipParts(o:Object):void{
				this.clear();
				this.object = o;
				
				for(var i:int = 0;i<o.shipParts.length;i++){
					var shipObject:Object = o.shipParts[i];
					var s:EclipseShipPart = EclipseUtil.resourceManager.createShipPart(shipObject.cardIndex);
					//重新设置id
					s.id = shipObject.id;
					this.addShipPart(s, i);
				}
			}
			
			/**
			 * 添加飞船配件
			 */
			public function addShipPart(s:EclipseShipPart, positionIndex:int):void{
				this.removeShipPart(positionIndex);
				var x:Array = this.getLayout();
				var p:Point = this.getPosition(x[positionIndex]);
				s.x = p.x;
				s.y = p.y;
				s.selectable = this.selectable;
				s.addEventListener(MouseEvent.CLICK, onPartClick);
				
				//this.shipParts.push(s);
				s.positionIndex = positionIndex;
				this.shipParts[positionIndex] = s;
				this.addChild(s);
			}
			
			/**
			 * 移除飞船配件
			 */
			public function removeShipPart(positionIndex:int):void{
				var s:EclipseShipPart = this.shipParts[positionIndex] as EclipseShipPart;
				if(s!=null){
					this.shipParts[positionIndex] = null;
					this.removeChild(s);
				}
			}
			
			/**
			 * 取得point
			 */
			protected function getPosition(x:Array):Point{
				var p:Point = new Point((x[0]-1) * 60, (x[1]-1) * 60);
				return p;
			}
			
			/**
			 * 取得布局的格式
			 */
			protected function getLayout():Array{
				var res:Array = null;
				switch(object.shipType){
					case UnitType.INTERCEPTOR:
						res = [[2, 2], [1, 2.7], [2, 3], [3, 2.7]];
						break;
					case UnitType.CRUISER:
						res = [[2, 1.5], [1, 2], [1, 3], [2, 2.5], [3, 2], [3, 3]];
						break;
					case UnitType.DREADNOUGHT:
						res = [[1, 1], [1, 2], [1, 3], [2, 1.5], [2, 2.5], [3, 1], [3, 2], [3, 3]];
						break;
					case UnitType.STARBASE:
						res = [[2, 1], [1, 2], [2, 2], [2, 3], [3, 2]];
						break;
				}
				return res;
			}
			
			protected function onPartClick(evt:MouseEvent):void{
				var s:EclipseShipPart = evt.target as EclipseShipPart;
				if(s.selectable){
					var param:Object = {"positionIndex":s.positionIndex};
					param.unitType = this.object.shipType;
					EclipseUtil.actionManager.sendCurrentCommand("SELECT_PART", param);
				}
			}
		]]>
	</mx:Script>
</mx:Canvas>
